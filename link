https://www.c-sharpcorner.com/article/upload-large-files-to-mvc-webapi-using-partitioning/

services.Configure<IISServerOptions>(options =>
            {
                options.MaxRequestBodySize = null;
            });
services.Configure<KestrelServerOptions>(options =>
            {
                options.Limits.MaxRequestBodySize = null;
            });

List<FileModel>
The API endpoint performs validation to ensure the total size of all attachments does not exceed 35 MB. If the validation fails, the API will return an appropriate error message.

POST /api/upload HTTP/1.1
Content-Type: application/json

{
  "files": [
    {
      "FileName": "example-image.jpg",
      "Content": "<binary-data>",
      "FileType": "image/jpeg"
    },
    {
      "FileName": "example-document.pdf",
      "Content": "<binary-data>",
      "FileType": "application/pdf"
    }
  ]
}


<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <targets>
    <!-- Target 1 - Primary target -->
    <target xsi:type="File" name="target1" fileName="logs/logfile.txt"
            layout="${longdate} ${level:uppercase=true} ${message}" />

    <!-- Target 2 - Fallback target -->
    <target xsi:type="File" name="target2" fileName="logs/fallback_logfile.txt"
            layout="${longdate} ${level:uppercase=true} ${message}" />
  </targets>

  <rules>
    <!-- Rule for Target 1 (primary) -->
    <logger name="*" minlevel="Trace" writeTo="target1" />

    <!-- Rule for Target 2 (fallback) -->
    <logger name="*" minlevel="Trace" writeTo="target2" />
  </rules>

</nlog>



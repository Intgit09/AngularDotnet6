using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

public class TcpClientTest
{
    private readonly string serverAddress;
    private readonly int port;

    public TcpClientTest(string serverAddress, int port)
    {
        this.serverAddress = serverAddress;
        this.port = port;
    }

    public async Task ConnectAndSendMessageAsync(string message)
    {
        using (TcpClient client = new TcpClient(serverAddress, port))
        {
            Console.WriteLine($"Connected to server: {serverAddress}:{port}");

            using (NetworkStream stream = client.GetStream())
            {
                // Send data to the server
                byte[] data = Encoding.ASCII.GetBytes(message);
                await stream.WriteAsync(data, 0, data.Length);

                Console.WriteLine($"Sent message: {message}");

                // Optionally, receive a response from the server (unimplemented here)
                // byte[] buffer = new byte[1024];
                // int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);
                // ...
            }
        }
    }

    public static void Main(string[] args)
    {
        if (args.Length < 2)
        {
            Console.WriteLine("Usage: TcpClientTest <server_address> <port>");
            return;
        }

        string serverAddress = args[0];
        int port = int.Parse(args[1]);

        var client = new TcpClientTest(serverAddress, port);
        string message = "Hello from the client!";
        client.ConnectAndSendMessageAsync(message).Wait(); // Wait for the async task to finish for demonstration

        Console.WriteLine("Press any key to exit...");
        Console.ReadKey();
    }
}
